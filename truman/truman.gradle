plugins {
    id 'war'
    id 'me.champeau.jmh'
    id 'org.asciidoctor.jvm.convert' version '4.0.3'
    id 'org.asciidoctor.jvm.pdf' version '4.0.3'
    id 'org.asciidoctor.jvm.gems' version '4.0.3'
    // id 'org.asciidoctor.jvm.revealjs' version '4.0.3'
    id 'org.asciidoctor.editorconfig' version '4.0.3'
}

configurations {
    asciidoctorExt
    asciidocExtensions
}

dependencies {
    asciidoctorGems "rubygems:rouge:4.3.0"
    // asciidoctorGems "rubygems:rouge:3.30.0"
    asciidoctorGems "rubygems:asciidoctor-multipage:0.0.19"
    asciidoctorGems "rubygems:asciidoctor-comment-links:0.0.2"

    implementation(project(":spring-beans"))
    implementation(project(":spring-context"))
    implementation(project(":spring-jdbc"))
    implementation(project(":spring-tx"))
    implementation(project(":spring-webmvc"))

    implementation(project(":spring-test"))

    implementation("jakarta.annotation:jakarta.annotation-api")
    implementation("com.fasterxml.jackson.core:jackson-databind")

    implementation("org.aspectj:aspectjweaver")

    implementation('org.projectlombok:lombok:1.18.32')
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    implementation 'com.zaxxer:HikariCP:5.1.0'
    implementation 'com.mysql:mysql-connector-j:8.4.0'
    // implementation 'mysql:mysql-connector-java:5.1.49'
    implementation 'org.mybatis:mybatis:3.5.16'
    implementation 'org.mybatis:mybatis-spring:3.0.3'

    providedCompile("jakarta.servlet:jakarta.servlet-api:6.0.0")
    implementation('io.undertow:undertow-servlet:2.3.13.Final')
    implementation('io.undertow:undertow-websockets-jsr:2.3.13.Final')


    // // 使用测试，注解总报错
    // // TODO 加了下面的依赖不报错了。新问题：明明没有使用 Kotlinx，为啥却要加这个依赖？
    // implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core")

    jmh 'org.openjdk.jmh:jmh-core:1.37'
    jmh 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    jmh 'net.sf.jopt-simple:jopt-simple:5.0.4'

    implementation("org.slf4j:slf4j-api")
    implementation("org.apache.logging.log4j:log4j-slf4j-impl")
    implementation("org.apache.logging.log4j:log4j-1.2-api")
    implementation("org.apache.logging.log4j:log4j-jcl")
    implementation("org.apache.logging.log4j:log4j-jul")
    implementation("org.apache.logging.log4j:log4j-core")

    implementation("org.junit.platform:junit-platform-launcher")
    implementation("org.junit.jupiter:junit-jupiter-engine")
    implementation("org.mockito:mockito-core")
    implementation("org.mockito:mockito-junit-jupiter")
    implementation("org.assertj:assertj-core")

    implementation platform("org.apache.dubbo:dubbo-bom:3.2.12")
    implementation("org.apache.dubbo:dubbo-registry-multicast")
    implementation("org.apache.dubbo:dubbo-registry-zookeeper")
    implementation("org.apache.dubbo:dubbo-configcenter-zookeeper")
    implementation("org.apache.dubbo:dubbo-metadata-report-zookeeper")
    implementation("org.apache.dubbo:dubbo-rpc-dubbo")
    implementation("org.apache.dubbo:dubbo-config-spring")
    implementation("org.apache.dubbo:dubbo-remoting-netty4")
    implementation("org.apache.dubbo:dubbo-serialization-hessian2")

    implementation 'javax.activation:activation:1.1.1'
    implementation 'com.sun.activation:jakarta.activation:2.1.1'
    implementation 'io.ratpack:ratpack-core:1.9.0'
}

test {
    // make sure the classes dir is used on the test classpath (required by ResourceTests)
    // When test fixtures are involved, the JAR is used by default
    classpath = sourceSets.main.output.classesDirs + classpath - files(jar.archiveFile)
}

asciidoctorj {
    requires "asciidoctor-comment-links"
    // TODO 不生效
    //  https://github.com/owenh000/asciidoctor-multipage
//    requires "asciidoctor-multipage"
//    attributes require: "asciidoctor-multipage",
//            backend: "multipage_html5"
}

asciidoctor {
    // 加载必要的 Gem
    dependsOn asciidoctorGemsPrepare
    configurations 'asciidoctorExt'
    configurations 'asciidoctorExtensions'

    baseDirFollowsSourceDir()

    sources {
        include 'index.adoc'
    }
    outputDir "${project.getLayout().getBuildDirectory()}/docs/html5"
    forkOptions {
        jvmArgs += ["--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED",
                    "--add-opens", "java.base/java.io=ALL-UNNAMED"]
    }
    logDocuments = true
}

asciidoctorPdf {
    baseDirFollowsSourceDir()
    asciidoctorj {
        attributes "pdf-fontsdir": "${project.projectDir}/cfg/fonts;GEM_FONTS_DIR;",
                "pdf-themesdir": "${project.projectDir}/cfg/theme",
                "pdf-theme": "Source"
    }
    sources {
        include 'index.adoc'
    }
    outputDir "${project.getLayout().getBuildDirectory()}/docs/pdf"
    forkOptions {
        jvmArgs += ["--add-opens", "java.base/sun.nio.ch=ALL-UNNAMED",
                    "--add-opens", "java.base/java.io=ALL-UNNAMED"]
    }
    logDocuments = true

}

asciidoctorj {
    def sourceAttr = 'linenums,indent=0,subs="attributes,verbatim"'

    version = '3.0.0'
    jrubyVersion = '9.4.8.0'
    fatalWarnings ".*"
    options doctype: 'book', eruby: 'erubis'
    attributes([
            author: 'D瓜哥',
            email: 'https://www.diguage.com',
            revnumber: project.version,
            icons: 'font',
            idprefix: '',
            idseparator: '-',
            docinfo: 'shared',
            sectanchors: '',
            sectnums: '',
            'source-highlighter': 'rouge',
            'rouge-style': 'github', // molokai, monokai, github, gruvbox
            'linkcss': 'true',
            toc: 'left',
            toclevels: 4,
            sectnums: false,
            sectnumlevels: 4,
            sectanchors: true,
            fontsDir: 'cfg/fonts',
            graphvizdot: '/usr/local/bin/dot',
            stylesdir: 'css',
            homepage: 'https://www.diguage.com',
            plantumlconfig: "${getProjectOperations().projectDir}/cfg/plantuml.cfg",
            "scripts": "cjk",

            'spring-version'     : project.version,
            'source_attr'        : sourceAttr,
            'java_src_attr'      : "source%nowrap,java,${sourceAttr}",
            'xml_src_attr'       : "source%nowrap,xml,${sourceAttr}",
            'image_attr'         : 'align="center",width=98%',
            'diagram_attr'       : 'format=svg,align="center",width=98%',
            // 'rootDir'   : project.rootDir,    // = /path/to/spring-framework
            // 'projectDir': project.projectDir, // = /path/to/spring-framework/truman
            // 'buildDir'  : project.buildDir,   // = /path/to/spring-framework/truman/build
            'truman_src_dir'     : "${getProjectOperations().projectDir}/src/main/java/com/diguage/truman",
            'truman_resource_dir': "${getProjectOperations().projectDir}/src/main/resources/com/diguage/truman",
            'aop_src_dir'        : "${project.rootDir}/spring-aop/src/main/java/org/springframework/aop",
            'beans_src_dir'      : "${project.rootDir}/spring-beans/src/main/java/org/springframework/beans",
            'context_src_dir'    : "${project.rootDir}/spring-context/src/main/java/org/springframework",
            'core_src_dir'       : "${project.rootDir}/spring-core/src/main/java/org/springframework",
            'jdbc_src_dir'       : "${project.rootDir}/spring-jdbc/src/main/java/org/springframework/jdbc",
            'tx_src_dir'         : "${project.rootDir}/spring-tx/src/main/java/org/springframework"
    ])
    // attribute 'docinfo1', ''
    modules {
        pdf {
            version '2.3.18'
        }
        epub {
            version '2.1.3'
        }
        diagram {
            version '2.3.1'
        }
    }
}


repositories {
    mavenLocal()
    mavenCentral()
// use the ruby.gems(), and throw an error
//    ruby.gems()
//    ruby {
//        gems()
//    }
}
